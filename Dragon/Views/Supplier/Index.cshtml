@using X.PagedList;
@using X.PagedList.Mvc;
@model IEnumerable<Dragon.Models.Supplier>

@{
    ViewBag.Title = "Suppliers";
}

<h2>All Suppliers</h2>

@if (ViewBag.DisplayCreate == "Yes")
{

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

}

<div>
    @using (Html.BeginForm())
    {
        <div class="form-inline">

            <div class="form-group">
                @Html.TextBox("supplierName", "", new { @class = "form-control", placeholder = "Type the name you want to find" })
            </div>
            <div class="form-group">
                @Html.DropDownList("cityFilter",
                                   new SelectList(ViewBag.Cities),
                                   "City",
                                   new { @class = "form-control" }
                                   )
            </div>


            <button type="submit" class="btn btn-default">Search</button>

        </div>

    }
</div>



<!--

<div class="row">
    @foreach (var item in Model)
    {

        <div class="col-md-3 col-lg-offset-1" style="margin-bottom:15px">
            <div class="card" style="width: 18rem;">



                <img class="card-img-top" src="@Url.Action("ShowBackgroundImage", new { id = item.SupplierID})" alt="Card image cap"
                     style="object-fit: scale-down; /* Do not scale the image */ object-position: center; /* Center the image within the element */ height: 300px; width: 300px;" />


                <div class="card-body">
                    <h3 class="card-title">@item.Name</h3>
                    @{
                        if (item.Description.Length > 100)
                        {
                            <p class="card-text" style="height:80px">@item.Description.Remove(100)</p>
                        }
                        else
                        { <p class="card-text" style="min-height:80px">@item.Description</p>
                    }

                    }




                    <button class="btn btn-info">
                        @Html.ActionLink("See more", "Details", new
                        {
                            id = item.SupplierID
})
                    </button>
                </div>
            </div>
        </div>
    }

</div>
-->



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OwnerID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CategoryID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Capacity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Cost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SocialMedia)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VideoLink)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BackgroundImageID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SocialMedia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VideoLink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BackgroundImageID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.SupplierID }) |
                @Html.ActionLink("Details", "Details", new { id = item.SupplierID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.SupplierID })
            </td>
        </tr>
    }

</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }))